Etsydemo Notes!

_______________________________________________________
1. Get Up and Running
	Course Introduction

Refer to the Yelpdemo notes for a guide on basic setup.
_______________________________________________________
Installation for Mac Users

_______________________________________________________
Installation for Non-Mac Users

_______________________________________________________
2. Create Our Website
	Create a New App
___________________________________
Add Our First Pages

_______________________________________________________
Add Links

_______________________________________________________
Add Listings

To get the root route, 
1. rake routes
2. URI pattern: see /listings 
3. Its controller action is listings#index
4. Therefore in config/routes.rb, add root 'listings#index'
_______________________________________________________
3. Add Front-End Design
	Install Bootstrap

To add a Gemfile,
1. Add your gem 'bootstrap-sass', '~> 3.3.5' in Gemfile
2. bundle install
3. restart rails s

app/assets/javascripts/application.js
// I've put both bootstrap-sprockets and bootstrap requires for now. Until Alex gets back to me
//= require bootstrap-sprockets
//= require bootstrap

_______________________________________________________
Add a Navigation Bar

5:58
_______________________________________________________
Simplify Our Code

_______________________________________________________
Build Beautiful Forms

<div class="container">
gives padding around the edges of the body and copyright.

Found in app/assets/views/layouts/application.html.erb
_______________________________________________________
4. Update Listings With Images
	Install Paperclip and ImageMagick

	ImageMagick should already be installed back in yelpdemo.
_______________________________________________________
Set Up Paperclip

Bug with "Image has contents that are not what they are reported to be" when you try to upload an image to a listing:

In the comments:

1. Create a config/initializers/paperclip.rb with the following:

require 'paperclip/media_type_spoof_detector' 
	module Paperclip 
		class MediaTypeSpoofDetector 
			def spoofed? 
			false 
		end 
	end 
end

2. Restart rails s
_______________________________________________________
Design Page Layouts

What if I wanted 5 listings per row??

Remember you need @listing.price if you don't have 
<% @listings.each do |listing| %>
_______________________________________________________
Add Custom CSS

New trick! you can select a bunch of code and tab it all over at the same time!!! This is so efficient!
_______________________________________________________
5. Save Our Progress
	Set Up GitHub

Don't need to go through the process again, since I already did it in Yelpdemo. Unless you're using a new computer, of course. 

Alex's comment: "You should only need to go through the SSH setup once per GitHub user, not once per repository."

test github connection:
ssh -T git@github.com
_______________________________________________________
Commit Our Code to GitHub


_______________________________________________________
Deploy On Heroku

My comment:
After heroku keys:add, there's 

Found an SSH public key at c:/User/user/.ssh/id_rsa.pub 
Would you like to upload it to Heroku? [Yn] 

I put y for yes, but would that be compromising security?

_______________________________________________________
6. Host Images Online
	Set Up Dropbox
That extra comma in app/models/listing.rb though...
That image error where you need to comment the img display tag in index.html.erb, and add images (again), then re-enable the image tag to show images.

_______________________________________________________
Protect Our Account Data

Run figaro install (v1.0 +)rather than rails generate figaro:install (.0.7)

figaro heroku:set -e production rather than rake figaro:heroku for reasons above

This is the lesson with another removing homepage image display... again.
_______________________________________________________
Configure Dropbox Settings

didn't git push heroku master in this one
_______________________________________________________
7. Add Users
	Install Devise

Admin: test@example.com
kevin436
_______________________________________________________
Insert Conditional Links

_______________________________________________________
Customize Devise Forms and Alerts

<div class="field"> and <div class="actions">: 
convert all to 
<div class="form-group">

views/sessions/new.html.erb:
adding class:"form-control" to checkbox makes it big, and centered. Strange effect, Alex didn't have that. Either way don't use form-control on the checkbox.

Alex's custom dismissible alert:
<!--change name == :notice to name.to_s == "notice" in rails 4.1+ -->

_______________________________________________________
Add Names to Users

_______________________________________________________
Validate User and Listing Data

_______________________________________________________
8. Connect Users to Listings
	Associate Listings With Users

error:
SQLite3::BusyException: database is locked

To solve, open sqlitebrower to development.sqlite3
Delete the offending listing and save (write changes)
rake db:migrate, restart rails s

NoMethodError in Listings#index
undefined method `name' for nil:NilClass

To be expected: have to add user_id to each listing in sqlite 
_______________________________________________________
Set User Permissions

http://stackoverflow.com/questions/16519828/rails-4-before-filter-vs-before-action

"before_action is just a new syntax for before_filter and old syntax isn't even deprecated."
_______________________________________________________
Create a Seller Page

_______________________________________________________
Redesign the Seller Page

Saved with 9. Reorganize Order Links and URLs

_______________________________________________________
Create a Homepage Banner

Render a file in your browser:
https://www.dropbox.com/en/help/201
/*Change jumbotron.jpg?dl=0 to jumbotron.jpg?raw=1*/
_______________________________________________________
9. Place Orders
	Link Orders, Listings, Users (Part 1)

_______________________________________________________
Link Orders, Listings, Users (Part 2)

Here is a fix to all your orders_controller.rb woes!* (* Results may vary) 

To restore the orders_controller.rb to what it's supposed to be at the start of this lesson: 

From my dropbox: 
https://www.dropbox.com/sh/fl9qa1zrhrxtxhk/AAD7MKe_C28PmhalCgNFjQnLa?dl=0 

1. Take a look at the autogenerated orders_controller: I've included a copy of it called "buggy_order_controller.txt" as a jpg and txt file for reference. This controller is useless. 

2. Delete the orders_controller.rb file and in your command line, run 'rails generate scaffold_controller Orders'. 

3. The command line will ask you if you want to overwrite app/views/orders/index.html.erb. I just entered 'q' for quit/abort. I've included a screenshot of the command line called "rails generate scaffold_controller Orders result.JPG". 

4a. Check your new orders_controller.rb. There's one major thing to change: 

def order_params 
params[:order] 
end 
to: 

def order_params 
params.require(:order).permit(:address, :city, :state) 
end 

A screenshot of the above change: "change def order_params.JPG" 

4b. Don't bother with changing def update and def destroy, as they are both deleted in the next lesson, "Reorganize Order Links and URLs". 

Def create is covered in the video, only difference in "@order" to "root_url", and "render :show"/"render :new", to "render action: 'show'"/"render action: 'new'", though it seems like it's just a new syntax for render. 

5. Finally, I've saved a copy of orders_controller.rb you should start with at the beginning of the lesson as "Start with this orders_controller.txt". 

I hope this helped everyone! 

Notes: 
For those curious to why this bug is occuring, it seems to be caused by Devise interfering with the "rails generate scaffold" command (The first command in the previous lesson, "Link Orders, Listings, Users (Part 2)", which was: 

$ rails generate scaffold Order address:string city:string state:string 

Devise overwrites the default controller creation settings, leaving you with a useless orders_controller.rb. 

FYI this is what Alex's orders_controller.rb at the end of the lesson: 
https://github.com/BaseRails/etsydemo/blob/34cde76e31573fc01e3e8732048e604b5f467f76/app/controllers/orders_controller.rb 

This is a code difference check between the code "you should start with" right after step 3 and the code that Alex ended with at the end of the lesson: 
https://www.diffchecker.com/ogrgvlfd 

This bug is also in the Yelpdemo course, you can find my comment on it at 
https://www.baserails.com/courses/yelpdemo/build-a-review-scaffold

_______________________________________________________
Create Order History Pages

_______________________________________________________
Reorganize Order Links and URLs

git add --all to get rid of red deleted file links after you
git add .
_______________________________________________________
10. Accept Payments
	Set Up Stripe

in localhost page source, the second meta content doesn't have pk_test... Alex's does. Maybe it's just a change in the syntax, what stripe displays. I dunno
_______________________________________________________
Add Credit Card Fields

_______________________________________________________
Verify Credit Card Data

Ask Alex for a way, so you don't have to refresh the page after you put in invalid card information to use the complete order button.
_______________________________________________________
Charge Credit Cards

_______________________________________________________
11. Transfer Payments
	Collect Bank Account Info

_______________________________________________________
Verify Bank Account Info

_______________________________________________________
Transfer Funds

Tell Alex: 

After trying to create a new listing, Stripe error: have to authorize accounts on Stripe dashboard. Then, error 

Stripe::InvalidRequestError in ListingsController#create
An account with this email already exists.

Is this because we've combined creating a new listing with associating bank info with users at the same time?

Extracted source (around line #39):
37
38
39
40
41
42
          
    token = params[:stripeToken]

    recipient = Stripe::Account.create(
      :managed => false,
      :country => 'US',
      :email => current_user.email

Rails.root: C:/Users/user/etsydemo
_______________________________________________________
Course Summary

_______________________________________________________

_______________________________________________________

_______________________________________________________

_______________________________________________________

_______________________________________________________
Remaining to-do's:

admin:
test@example.com
kevin436
Kevin Peng

users:
johndoe@gmail.com
kevin436
John Doe


